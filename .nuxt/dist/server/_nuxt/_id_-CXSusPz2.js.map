{"version":3,"file":"_id_-CXSusPz2.js","sources":["../../../../pages/advertising/edit/[id].vue"],"sourcesContent":["<script setup>\nimport { ref, reactive, onMounted } from \"vue\";\nimport { mdiChevronLeft } from \"@mdi/js\";\nimport SectionMain from \"@/components/SectionMain.vue\";\nimport CardBox from \"@/components/CardBox.vue\";\nimport { proxyBaseUrl } from \"~~/configs/fetchBaseUrl\";\nimport { useMainStore } from \"~~/stores/main\";\n\nconst route = useRoute()\n\nconst router = useRouter()\n\nconst preSelectedGroups = ref([])\n\nconst mainStore = useMainStore();\n\nconst selectedGroups = ref([]);\n\nconst groupsLoaded = ref(false);\n\nconst form = reactive({\n  action_url: \"\",\n  token: mainStore.userToken,\n  text: \"\",\n  title: \"\",\n  date_start: \"\",\n  date_end: \"\",\n  to_all: true,\n  groups_id: [],\n  advertising_id: parseInt(route.params.id)\n});\n\nonMounted(() => {\n  downloadAdvertisingById(route.params.id)\n})\n\nwatch(selectedGroups, () => {\n  form.to_all = selectedGroups.value.length === 0\n  form.groups_id = selectedGroups.value\n});\n\nconst downloadAdvertisingById = async (id) => {\n    const path = proxyBaseUrl+'get-advertising-by-id'\n    await $fetch(path, {\n            method: 'POST',\n            body: { token: mainStore.userToken, advertising_id: id}\n          }).then(r => {\n            if(r.message != 'ok'){\n              alert('Ошибка');\n              router.back();\n              mainStore.getAdvertsList();\n              return\n            }\n            form.action_url = r.advertise[0].action_url;\n            form.token = mainStore.userToken;\n            form.text = r.advertise[0].text;\n            form.title = r.advertise[0].title;\n            form.date_start = r.advertise[0].date_start.split(' ')[0];\n            form.date_end = r.advertise[0].date_end.split(' ')[0];\n            if(r.advertise[0].to_all != 1){\n              for(let i = 0; i < r.advertise.length; i++){\n                preSelectedGroups.value.push(r.advertise[i].group_id)\n              }\n            }\n            groupsLoaded.value = true\n          });\n};\n\n\n\nconst editAdvert = async () => {\n  const path = proxyBaseUrl + \"edit-advertising\";\n  $fetch(path, {\n    method: \"POST\",\n    body: form,\n  }).then(async (r) => {\n    if (r.message === \"ok\") {\n      await setVisibility(form.advertising_id);\n      router.back();\n      mainStore.getAdvertsList();\n    } else {\n      alert(\"Ошибка: \", r.picture);\n    }\n  });\n};\n\nconst setVisibility = async (id) => {\n  let path;\n\n  const body = {\n    token: form.token,\n    advertising_id: id,\n  };\n\n  if(form.to_all){\n    body.to_all = 1;\n    body.users_id = [];\n    path = proxyBaseUrl + \"advertising-to-users\";\n  } else {\n    body.to_all = 0;\n    body.groups_id = form.groups_id;\n    path = proxyBaseUrl + \"advertising-to-groups\";\n  }\n  \n  await $fetch(path, {\n    method: \"POST\",\n    body: body}).then((r) => {\n      console.log(r)\n    });\n};\n\n</script>\n\n<template>\n  <div>\n    <NuxtLayout name=\"authenticated\">\n      <SectionMain>\n        <SectionTitleLine\n          :icon=\"mdiChevronLeft\"\n          :title=\"'Редактировать объявление'+ ' / '+ route.params.id\"\n          :back=\"true\"\n          main\n        >\n        </SectionTitleLine>\n\n        <div class=\"grid grid-cols-1 w-full gap-4\">\n          <CardBox title=\"Информация\" form>\n\n            <FormField label=\"Группы\">\n              <GroupsIdSelector v-if=\"groupsLoaded\" v-model=\"selectedGroups\" :pre-selected-groups=\"preSelectedGroups\" />\n              <div v-else>Загрузка групп...</div>\n            </FormField>\n\n            <FormField label=\"Текст для предварительного просмотра (10-25 символов)\">\n              <FormControl\n                v-model=\"form.title\"\n                placeholder=\"Текст\"\n                type=\"text\"\n              />\n            </FormField>\n\n            <FormField label=\"Текст для кнопки перехода (10-25 символов)\">\n              <FormControl\n                v-model=\"form.text\"\n                placeholder=\"Текст\"\n                type=\"text\"\n              />\n            </FormField>\n            <FormField label=\"Ссылка для перехода\">\n              <FormControl\n                v-model=\"form.action_url\"\n                placeholder=\"https://...\"\n                type=\"text\"\n              />\n            </FormField>\n            <FormField label=\"Дата, с которой будет видно объявление\">\n              <FormControl\n                v-model=\"form.date_start\"\n                placeholder=\"Дата\"\n                type=\"date\"\n              />\n            </FormField>\n            <FormField label=\"Дата, в которую объявление будет скрыто\">\n              <FormControl\n                v-model=\"form.date_end\"\n                placeholder=\"Дата\"\n                type=\"date\"\n              />\n            </FormField>\n          </CardBox>\n        </div>\n        <div class=\"flex flex-row justify-start items-center m-2\">\n          <BaseButtons>\n            <BaseButton color=\"info\" label=\"Отмена\" to=\"/advertising\" />\n            <BaseButton\n              color=\"success\"\n              label=\"Готово\"\n              @click=\"editAdvert()\"\n            />\n          </BaseButtons>\n        </div>\n      </SectionMain>\n    </NuxtLayout>\n  </div>\n</template>\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQA,UAAM,QAAQ,SAAU;AAExB,UAAM,SAAS,UAAW;AAE1B,UAAM,oBAAoB,IAAI,EAAE;AAEhC,UAAM,YAAY,aAAY;AAE9B,UAAM,iBAAiB,IAAI,CAAA,CAAE;AAE7B,UAAM,eAAe,IAAI,KAAK;AAE9B,UAAM,OAAO,SAAS;AAAA,MACpB,YAAY;AAAA,MACZ,OAAO,UAAU;AAAA,MACjB,MAAM;AAAA,MACN,OAAO;AAAA,MACP,YAAY;AAAA,MACZ,UAAU;AAAA,MACV,QAAQ;AAAA,MACR,WAAW,CAAE;AAAA,MACb,gBAAgB,SAAS,MAAM,OAAO,EAAE;AAAA,IAC1C,CAAC;AAMD,UAAM,gBAAgB,MAAM;AAC1B,WAAK,SAAS,eAAe,MAAM,WAAW;AAC9C,WAAK,YAAY,eAAe;AAAA,IAClC,CAAC;AA+BD,UAAM,aAAa,YAAY;AAC7B,YAAM,OAAO,eAAe;AAC5B,aAAO,MAAM;AAAA,QACX,QAAQ;AAAA,QACR,MAAM;AAAA,MACV,CAAG,EAAE,KAAK,OAAO,MAAM;AACnB,YAAI,EAAE,YAAY,MAAM;AACtB,gBAAM,cAAc,KAAK,cAAc;AACvC,iBAAO,KAAI;AACX,oBAAU,eAAc;AAAA,QAC9B,OAAW;AACL,gBAAM,YAAY,EAAE,OAAO;AAAA,QAC5B;AAAA,MACL,CAAG;AAAA,IACH;AAEA,UAAM,gBAAgB,OAAO,OAAO;AAClC,UAAI;AAEJ,YAAM,OAAO;AAAA,QACX,OAAO,KAAK;AAAA,QACZ,gBAAgB;AAAA,MACpB;AAEE,UAAG,KAAK,QAAO;AACb,aAAK,SAAS;AACd,aAAK,WAAW;AAChB,eAAO,eAAe;AAAA,MAC1B,OAAS;AACL,aAAK,SAAS;AACd,aAAK,YAAY,KAAK;AACtB,eAAO,eAAe;AAAA,MACvB;AAED,YAAM,OAAO,MAAM;AAAA,QACjB,QAAQ;AAAA,QACR;AAAA,MAAU,CAAC,EAAE,KAAK,CAAC,MAAM;AACvB,gBAAQ,IAAI,CAAC;AAAA,MACn}