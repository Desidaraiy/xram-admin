{"version":3,"file":"colors-BYRMrYIa.js","sources":["../../../../components/BaseIcon.vue","../../../../configs/colors.js"],"sourcesContent":["<script setup>\nimport { computed } from 'vue'\n\nconst props = defineProps({\n  path: {\n    type: String,\n    required: true\n  },\n  w: {\n    type: String,\n    default: 'w-6'\n  },\n  h: {\n    type: String,\n    default: 'h-6'\n  },\n  size: {\n    type: [String, Number],\n    default: 16\n  }\n})\n\nconst spanClass = computed(() => `inline-flex justify-center items-center ${props.w} ${props.h}`)\n</script>\n\n<template>\n  <span :class=\"spanClass\">\n    <svg\n      viewBox=\"0 0 24 24\"\n      :width=\"size\"\n      :height=\"size\"\n      class=\"inline-block\"\n    >\n      <path\n        fill=\"currentColor\"\n        :d=\"path\"\n      />\n    </svg>\n    <slot />\n  </span>\n</template>\n","export const gradientBgBase = 'bg-gradient-to-tr'\nexport const gradientBgPurplePink = `${gradientBgBase} from-purple-400 via-pink-500 to-red-500`\nexport const gradientBgDark = `${gradientBgBase} from-slate-700 via-slate-900 to-slate-800`\nexport const gradientBgPinkRed = `${gradientBgBase} from-pink-400 via-red-500 to-yellow-500`\nexport const gradientBgGreenIndigo = `${gradientBgBase} from-emerald-500 via-emerald-300 to-indigo-500`\n\nexport const colorsBgLight = {\n  white: 'bg-white text-black',\n  light: 'bg-white text-black dark:bg-slate-900/70 dark:text-white',\n  contrast: 'bg-gray-800 text-white dark:bg-white dark:text-black',\n  success: 'bg-emerald-500 border-emerald-500 text-white',\n  danger: 'bg-red-500 border-red-500 text-white',\n  warning: 'bg-yellow-500 border-yellow-500 text-white',\n  info: 'bg-blue-500 border-blue-500 text-white'\n}\n\nexport const colorsText = {\n  white: 'text-black dark:text-slate-100',\n  light: 'text-gray-700 dark:text-slate-400',\n  contrast: 'dark:text-white',\n  success: 'text-emerald-500',\n  danger: 'text-red-500',\n  warning: 'text-yellow-500',\n  info: 'text-blue-500'\n}\n\nexport const colorsOutline = {\n  white: [colorsText.white, 'border-gray-100'],\n  light: [colorsText.light, 'border-gray-100'],\n  contrast: [colorsText.contrast, 'border-gray-900 dark:border-slate-100'],\n  success: [colorsText.success, 'border-emerald-500'],\n  danger: [colorsText.danger, 'border-red-500'],\n  warning: [colorsText.warning, 'border-yellow-500'],\n  info: [colorsText.info, 'border-blue-500']\n}\n\nexport const getButtonColor = (color, isOutlined, hasHover) => {\n  const colors = {\n    bg: {\n      white: 'bg-white text-black',\n      contrast: 'bg-gray-800 text-white dark:bg-white dark:text-black',\n      light: 'bg-gray-50 text-black',\n      success: 'bg-emerald-600 dark:bg-emerald-500 text-white',\n      danger: 'bg-red-600 dark:bg-red-500 text-white',\n      warning: 'bg-yellow-600 dark:bg-yellow-500 text-white',\n      info: 'bg-blue-600 dark:bg-blue-500 text-white'\n    },\n    bgHover: {\n      white: 'hover:bg-gray-50',\n      contrast: 'hover:bg-gray-900 hover:dark:bg-slate-100',\n      light: 'hover:bg-gray-200',\n      success: 'hover:bg-emerald-700 hover:border-emerald-700 hover:dark:bg-emerald-600 hover:dark:border-emerald-600',\n      danger: 'hover:bg-red-700 hover:border-red-700 hover:dark:bg-red-600 hover:dark:border-red-600',\n      warning: 'hover:bg-yellow-700 hover:border-yellow-700 hover:dark:bg-yellow-600 hover:dark:border-yellow-600',\n      info: 'hover:bg-blue-700 hover:border-blue-700 hover:dark:bg-blue-600 hover:dark:border-blue-600'\n    },\n    borders: {\n      white: 'border-gray-100',\n      contrast: 'border-gray-900 dark:border-slate-100',\n      light: 'border-gray-100 dark:border-slate-700',\n      success: 'border-emerald-600 dark:border-emerald-500',\n      danger: 'border-red-600 dark:border-red-500',\n      warning: 'border-yellow-600 dark:border-yellow-500',\n      info: 'border-blue-600 dark:border-blue-500'\n    },\n    text: {\n      white: 'text-black dark:text-slate-100',\n      contrast: 'dark:text-slate-100',\n      light: 'text-gray-700 dark:text-slate-400',\n      success: 'text-emerald-600 dark:text-emerald-500',\n      danger: 'text-red-600 dark:text-red-500',\n      warning: 'text-yellow-600 dark:text-yellow-500',\n      info: 'text-blue-600 dark:text-blue-500'\n    },\n    outlineHover: {\n      white: 'hover:bg-gray-100 hover:text-gray-900 dark:hover:text-slate-900',\n      contrast: 'hover:bg-gray-800 hover:text-gray-100 hover:dark:bg-slate-100 hover:dark:text-black',\n      light: 'hover:bg-gray-100 hover:text-gray-900 dark:hover:text-slate-900',\n      success: 'hover:bg-emerald-600 hover:text-white hover:text-white hover:dark:text-white hover:dark:border-emerald-600',\n      danger: 'hover:bg-red-600 hover:text-white hover:text-white hover:dark:text-white hover:dark:border-red-600',\n      warning: 'hover:bg-yellow-600 hover:text-white hover:text-white hover:dark:text-white hover:dark:border-yellow-600',\n      info: 'hover:bg-blue-600 hover:text-white hover:dark:text-white hover:dark:border-blue-600'\n    }\n  }\n\n  if (!colors.bg[color]) {\n    return color\n  }\n\n  const base = [\n    isOutlined ? colors.text[color] : colors.bg[color],\n    colors.borders[color]\n  ]\n\n  if (hasHover) {\n    base.push(isOutlined ? colors.outlineHover[color] : colors.bgHover[color])\n  }\n\n  return base\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAGA,UAAM,QAAQ;AAmBd,UAAM,YAAY,SAAS,MAAM,2CAA2C,MAAM,CAAC,IAAI,MAAM,CAAC,EAAE;;;;;;;;;;;;;;ACtBzF,MAAM,iBAAiB;AAClB,MAAC,uBAAuB,GAAG,cAAc;AACzC,MAAC,iBAAiB,GAAG,cAAc;AACnC,MAAC,oBAAoB,GAAG,cAAc;AACtC,MAAC,wBAAwB,GAAG,cAAc;AAE1C,MAAC,gBAAgB;AAAA,EAC3B,OAAO;AAAA,EACP,OAAO;AAAA,EACP,UAAU;AAAA,EACV,SAAS;AAAA,EACT,QAAQ;AAAA,EACR,SAAS;AAAA,EACT,MAAM;AACR;AAEY,MAAC,aAAa;AAAA,EACxB,OAAO;AAAA,EACP,OAAO;AAAA,EACP,UAAU;AAAA,EACV,SAAS;AAAA,EACT,QAAQ;AAAA,EACR,SAAS;AAAA,EACT,MAAM;AACR;AAEY,MAAC,gBAAgB;AAAA,EAC3B,OAAO,CAAC,WAAW,OAAO,iBAAiB;AAAA,EAC3C,OAAO,CAAC,WAAW,OAAO,iBAAiB;AAAA,EAC3C,UAAU,CAAC,WAAW,UAAU,uCAAuC;AAAA,EACvE,SAAS,CAAC,WAAW,SAAS,oBAAoB;AAAA,EAClD,QAAQ,CAAC,WAAW,QAAQ,gBAAgB;AAAA,EAC5C,SAAS,CAAC,WAAW,SAAS,mBAAmB;AAAA,EACjD,MAAM,CAAC,WAAW,MAAM,iBAAiB;AAC3C;AAEY,MAAC,iBAAiB,CAAC,OAAO,YAAY,aAAa;AAC7D,QAAM,SAAS;AAAA,IACb,IAAI;AAAA,MACF,OAAO;AAAA,MACP,UAAU;AAAA,MACV,OAAO;AAAA,MACP,SAAS;AAAA,MACT,QAAQ;AAAA,MACR,SAAS;AAAA,MACT,MAAM;AAAA,IACP;AAAA,IACD,SAAS;AAAA,MACP,OAAO;AAAA,MACP,UAAU;AAAA,MACV,OAAO;AAAA,MACP,SAAS;AAAA,MACT,QAAQ;AAAA,MACR,SAAS;AAAA,MACT,MAAM;AAAA,IACP;AAAA,IACD,SAAS;AAAA,MACP,OAAO;AAAA,MACP,UAAU;AAAA,MACV,OAAO;AAAA,MACP,SAAS;AAAA,MACT,QAAQ;AAAA,MACR,SAAS;AAAA,MACT,MAAM;AAAA,IACP;AAAA,IACD,MAAM;AAAA,MACJ,OAAO;AAAA,MACP,UAAU;AAAA,MACV,OAAO;AAAA,MACP,SAAS;AAAA,MACT,QAAQ;AAAA,MACR,SAAS;AAAA,MACT,MAAM;AAAA,IACP;AAAA,IACD,cAAc;AAAA,MACZ,OAAO;AAAA,MACP,UAAU;AAAA,MACV,OAAO;AAAA,MACP,SAAS;AAAA,MACT,QAAQ;AAAA,MACR,SAAS;AAAA,MACT,MAAM;AAAA,IACP;AAAA,EACF;AAED,MAAI,CAAC,OAAO,GAAG,KAAK,GAAG;AACrB,WAAO;AAAA,EACR;AAED,QAAM,OAAO;AAAA,IACX,aAAa,OAAO,KAAK,KAAK,IAAI,OAAO,GAAG,KAAK;AAAA,IACjD,OAAO,QAAQ,KAAK;AAAA,EACrB;AAED,MAAI,UAAU;AACZ,SAAK,KAAK,aAAa,OAAO,aAAa,KAAK,IAAI,OAAO,QAAQ,KAAK,CAAC;AAAA,EAC1E;AAED,SAAO;AACT;"}