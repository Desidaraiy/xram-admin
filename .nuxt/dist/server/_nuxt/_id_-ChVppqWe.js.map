{"version":3,"file":"_id_-ChVppqWe.js","sources":["../../../../pages/admins/edit/[id].vue"],"sourcesContent":["<script setup>\nimport { ref, reactive, onMounted } from 'vue'\nimport {\n  mdiChevronLeft\n} from '@mdi/js'\nimport SectionMain from '@/components/SectionMain.vue'\nimport CardBox from '@/components/CardBox.vue'\nimport { useMainStore } from '@/stores/main'\nimport { proxyBaseUrl } from '~~/configs/fetchBaseUrl'\n\nconst mainStore = useMainStore()\nconst route = useRoute()\nconst router = useRouter()\n\nonMounted(async () => {\n    await mainStore.setCurrentAdmin(route.params.id)\n    await mainStore.getCurrentAdminSections()\n    sections.sectionsData = arrayToSections(sections.sectionsData, mainStore.currentAdminSections)\n    form.fio = mainStore.currentAdmin.fio\n    form.email = mainStore.currentAdmin.email\n    form.phone = mainStore.currentAdmin.phone\n    form.password = mainStore.currentAdmin.password\n})\n\nconst form = reactive({\n    fio: '',\n    email: '',\n    phone: '',\n    password: '',\n})\n\nconst sections = reactive({\n    sectionsData: {\n        stats: {\n            id: 2,\n            value: true\n        },\n        clients: {\n            id: 3,\n            value: false\n        },\n        mailing: {\n            id: 4,\n            value: false\n        },\n        admins: {\n            id: 1,\n            value: false\n        },\n        advertising: {\n            id: 5,\n            value: false\n        },\n        groups: {\n            id: 7,\n            value: false\n        }\n    }\n})\nconst sectionsToArray = (sections) => {\n    return Object.values(sections)\n        .filter(section => section.value)\n        .map(section => section.id)\n}\n\nconst arrayToSections = (sections, array) => {\n    array.forEach(id => {\n        for (const [key, item] of Object.entries(sections)) {\n            if (item.id === id)  {\n                item.value = true\n            }\n        }       \n    });\n    return sections\n}\n\nconst isErrorModalActive = ref(false)\nconst errorText = ref('')\n\nfunction validateEmail(email) {\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n}\n\nfunction validatePhone(phone) {\n    const re = /^(\\+7|7|8)?[\\s\\-]?\\(?[489][0-9]{2}\\)?[\\s\\-]?[0-9]{3}[\\s\\-]?[0-9]{2}[\\s\\-]?[0-9]{2}$/;\n    return re.test(String(phone).toLowerCase());\n}\n\nconst submit = async () => {\n    if(form.name == '' || form.email == '' || form.password == ''){\n        isErrorModalActive.value = true \n        errorText.value = 'Заполните все обязательные поля'\n        return\n    }\n    // if(!validateEmail(form.email)){\n    //     isErrorModalActive.value = true \n    //     errorText.value = 'Некорректный email'\n    //     return\n    // }\n    // if(!validatePhone(form.phone)){\n    //     isErrorModalActive.value = true\n    //     errorText.value = 'Некорректный телефон'\n    //     return\n    // }\n    const data = {\n        token: mainStore.userToken,\n        id: mainStore.currentAdmin.id,\n        fio: form.fio,\n        email: form.email,\n        phone: form.phone,\n        password: form.password,\n        type: \"operator\",\n        active: \"1\"\n    }\n    const path = proxyBaseUrl+'edit-admin'\n    $fetch(path, {\n        method: 'POST',\n        body: data\n    }).then(r => {\n        const resp = r.message\n        if(resp === 'ok'){ \n            setNewPriveleges().then(() => {\n                router.push('/admins')\n            })\n        }else{\n            alert(resp)\n        }\n    });\n}\n\nconst setNewPriveleges = async () => {\n    const selectedSections = sectionsToArray(sections.sectionsData)\n    const path = proxyBaseUrl+'set-privilege'\n    const data = {\n        token: mainStore.userToken,\n        admin_id: mainStore.currentAdmin.id,\n        sections: selectedSections\n    }\n    console.log('setting priveleges: ', data);\n    $fetch(path, {\n        method: 'POST',\n        body: data\n    }).then(r => {\n        const resp = r.message\n        if(resp != 'ok'){\n            return\n        }\n    });\n}\n\n</script>\n\n<template>\n\n  <div>\n\n    <CardBoxModal\n    v-model=\"isErrorModalActive\"\n    title=\"Ошибка\"\n  >\n    <p> {{ errorText }}</p>\n  </CardBoxModal>\n    <NuxtLayout name=\"authenticated\">\n          <SectionMain>\n      <SectionTitleLine\n        :icon=\"mdiChevronLeft\"\n        title=\"Редактирование администратора\"\n        :back=\"true\"\n        main\n      >\n      </SectionTitleLine>\n\n    <div class=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n        <CardBox title=\"Информация\"\n                form \n                @submit.prevent=\"submit\">\n            <FormField\n                label=\"Имя\"\n                help=\"Обязательно\"\n            >\n            <FormControl\n                v-model=\"form.fio\"\n                name=\"name\"\n                autocomplete=\"name\"\n            />\n            </FormField>\n            <FormField\n                label=\"E-mail\"\n                help=\"Обязательно\"\n            >\n            <FormControl\n                v-model=\"form.email\"\n                name=\"email\"\n                autocomplete=\"email\"\n            />\n            </FormField>\n            <FormField\n                label=\"Телефон\"\n                help=\"Обязательно\"\n            >\n            <FormControl\n                v-model=\"form.phone\"\n                name=\"phone\"\n                :intonly=\"true\"\n                autocomplete=\"phone\"\n            />\n            </FormField>\n            <FormField\n                label=\"Пароль\"\n                help=\"Обязательно\"\n            >\n            <FormControl\n                v-model=\"form.password\"\n                name=\"password\"\n                type=\"password\"\n                autocomplete=\"password\"\n            />\n            </FormField>\n            <span class=\"flex justify-center text-center text-base\">\n                Приглашение будет отправлено на электронную почту\n            </span>\n        </CardBox>\n        <CardBox title=\"Доступные разделы\">\n            <div class=\"flex items-center my-2\">\n                <input type=\"checkbox\" class=\"form-checkbox rounded-full text-primary-500 \n                border-primary-500 focus:ring-primary-500 mr-4 p-3\" v-model=\"sections.sectionsData.admins.value\">\n                <span>Администраторы</span>\n            </div>\n            <div class=\"flex items-center my-2\">\n                <input type=\"checkbox\" class=\"form-checkbox rounded-full text-primary-500 border-primary-500 \n                focus:ring-primary-500 mr-4 p-3\" v-model=\"sections.sectionsData.clients.value\">\n                <span>Клиенты</span>\n            </div>\n            <div class=\"flex items-center my-2\">\n                <input type=\"checkbox\" class=\"form-checkbox rounded-full text-primary-500 border-primary-500\n                focus:ring-primary-500 mr-4 p-3\" v-model=\"sections.sectionsData.groups.value\">\n                <span>Группы</span>\n            </div>            \n            <div class=\"flex items-center my-2\">\n                <input type=\"checkbox\" class=\"form-checkbox rounded-full text-primary-500 border-primary-500 \n                focus:ring-primary-500 mr-4 p-3\" v-model=\"sections.sectionsData.mailing.value\">\n                <span>Рассылка</span>\n            </div>\n            <div class=\"flex items-center my-2\">\n                <input type=\"checkbox\" class=\"form-checkbox rounded-full text-primary-500 border-primary-500 \n                focus:ring-primary-500 mr-4 p-3\" v-model=\"sections.sectionsData.advertising.value\">\n                <span>Реклама</span>\n            </div>\n        </CardBox>\n    </div>\n    <div class=\"flex flex-row justify-end items-center m-2 \">\n        <BaseButtons>\n        <BaseButton \n            color=\"info\"\n            label=\"Отмена\"\n            to=\"/admins\"\n        />\n        <BaseButton\n            color=\"success\"\n            label=\"Сохранить\"\n            @click=\"submit()\"\n        />\n        </BaseButtons>\n    </div>\n    </SectionMain>\n    </NuxtLayout>\n  </div>\n</template>"],"names":["sections"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUA,UAAM,YAAY,aAAc;AAClB,aAAU;AACxB,UAAM,SAAS,UAAW;AAY1B,UAAM,OAAO,SAAS;AAAA,MAClB,KAAK;AAAA,MACL,OAAO;AAAA,MACP,OAAO;AAAA,MACP,UAAU;AAAA,IACd,CAAC;AAED,UAAM,WAAW,SAAS;AAAA,MACtB,cAAc;AAAA,QACV,OAAO;AAAA,UACH,IAAI;AAAA,UACJ,OAAO;AAAA,QACV;AAAA,QACD,SAAS;AAAA,UACL,IAAI;AAAA,UACJ,OAAO;AAAA,QACV;AAAA,QACD,SAAS;AAAA,UACL,IAAI;AAAA,UACJ,OAAO;AAAA,QACV;AAAA,QACD,QAAQ;AAAA,UACJ,IAAI;AAAA,UACJ,OAAO;AAAA,QACV;AAAA,QACD,aAAa;AAAA,UACT,IAAI;AAAA,UACJ,OAAO;AAAA,QACV;AAAA,QACD,QAAQ;AAAA,UACJ,IAAI;AAAA,UACJ,OAAO;AAAA,QACV;AAAA,MACJ;AAAA,IACL,CAAC;AACD,UAAM,kBAAkB,CAACA,cAAa;AAClC,aAAO,OAAO,OAAOA,SAAQ,EACxB,OAAO,aAAW,QAAQ,KAAK,EAC/B,IAAI,aAAW,QAAQ,EAAE;AAAA,IAClC;AAaA,UAAM,qBAAqB,IAAI,KAAK;AACpC,UAAM,YAAY,IAAI,EAAE;AAYxB,UAAM,SAAS,YAAY;AACvB,UAAG,KAAK,QAAQ,MAAM,KAAK,SAAS,MAAM,KAAK,YAAY,IAAG;AAC1D,2BAAmB,QAAQ;AAC3B,kBAAU,QAAQ;AAClB;AAAA,MACH;AAWD,YAAM,OAAO;AAAA,QACT,OAAO,UAAU;AAAA,QACjB,IAAI,UAAU,aAAa;AAAA,QAC3B,KAAK,KAAK;AAAA,QACV,OAAO,KAAK;AAAA,QACZ,OAAO,KAAK;AAAA,QACZ,UAAU,KAAK;AAAA,QACf,MAAM;AAAA,QACN,QAAQ;AAAA,MACX;AACD,YAAM,OAAO,eAAa;AAC1B,aAAO,MAAM;AAAA,QACT,QAAQ;AAAA,QACR,MAAM;AAAA,MACd,CAAK,EAAE,KAAK,OAAK;AACT,cAAM,OAAO,EAAE;AACf,YAAG,SAAS,MAAK;AACb,2BAAgB,EAAG,KAAK,MAAM;AAC1B,mBAAO,KAAK,SAAS;AAAA,UACrC,CAAa;AAAA,QACb,OAAa;AACD,gBAAM,IAAI;AAAA,QACb;AAAA,MACT,CAAK;AAAA,IACL;AAEA,UAAM,mBAAmB,YAAY;AACjC,YAAM,mBAAmB,gBAAgB,SAAS,YAAY;AAC9D,YAAM,OAAO,eAAa;AAC1B,YAAM,OAAO;AAAA,QACT,OAAO,UAAU;AAAA,QACjB,UAAU,UAAU,aAAa;AAAA,QACjC,UAAU;AAAA,MACb;AACD,cAAQ,IAAI,wBAAwB,IAAI;AACxC,aAAO,MAAM;AAAA,QACT,QAAQ;AAAA,QACR,MAAM;AAAA,MACd,CAAK,EAAE,KAAK,OAAK;AACT,cAAM,OAAO,EAAE;AACf}