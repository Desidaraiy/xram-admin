{"version":3,"file":"TableSampleClients-cZ8HAdYi.js","sources":["../../../../components/TableMessages.vue","../../../../components/TableSampleClients.vue"],"sourcesContent":["<script setup>\nimport { computed, ref, reactive, watch } from 'vue'\nimport { useMainStore } from '@/stores/main'\nimport { useStyleStore } from '@/stores/style'\nimport BaseLevel from '@/components/BaseLevel.vue'\nimport BaseButtons from '@/components/BaseButtons.vue'\nimport BaseButton from '@/components/BaseButton.vue'\n\nconst props = defineProps({\n  checkable: Boolean,\n  isActive: Boolean\n})\n\nwatch(() => props.isActive, (newValue) => {\n  if (newValue) {\n    resetDates()\n    mainStore.isSearchingMessages = false;\n  }\n});\n\nconst emit = defineEmits(['reset-dates'])\n\nconst styleStore = useStyleStore()\n\nconst mainStore = useMainStore()\n\nconst items = computed(() => mainStore.isSearchingMessages ? mainStore.foundMessages : mainStore.messages)\n\nconst perPage = ref(30)\n\nconst currentPage = ref(0)\n\nconst itemsPaginated = computed(\n  () => items.value.slice(perPage.value * currentPage.value, perPage.value * (currentPage.value + 1))\n)\n\nconst numPages = computed(() => Math.ceil(items.value.length / perPage.value))\n\nconst currentPageHuman = computed(() => currentPage.value + 1)\n\nconst pagesList = computed(() => {\n  const pagesList = []\n  for (let i = 0; i < numPages.value; i++) {\n    pagesList.push(i)\n  }\n  return pagesList\n})\n\nconst searchDates = reactive({\n  startDate: '',\n  endDate: ''\n})\n\nconst resetDates = () => {\n  searchDates.startDate = ''\n  searchDates.endDate = ''\n  emit('reset-dates');\n}\n\nwatch(searchDates, () => {\n  if(searchDates.startDate != '' || searchDates.endDate != ''){\n    mainStore.getMessagesList(searchDates)\n  }else{\n    mainStore.isSearchingMessages = false\n  }\n})\n\n</script>\n\n<template>\n\n  <div class=\"flex flex-row mx-auto py-4 justify-around items-start \">\n    <span class=\"flex flex-col items-center my-auto\">Выберите даты</span>\n    <FormField\n      label=\"Дата, От\"\n    >\n    <input \n        type=\"date\" \n        v-model=\"searchDates.startDate\" \n        class=\"px-3 py-2 max-w-full focus:ring focus:outline-none border-gray-700 \n              rounded w-full dark:placeholder-gray-400 h-12 border bg-white \n              dark:bg-slate-800\" \n        />\n    </FormField>\n    <FormField\n      label=\"Дата, До\"\n    >\n    <input \n        type=\"date\" \n        v-model=\"searchDates.endDate\" \n        class=\"px-3 py-2 max-w-full focus:ring focus:outline-none border-gray-700 \n              rounded w-full dark:placeholder-gray-400 h-12 border bg-white \n              dark:bg-slate-800\" \n        />\n    </FormField>\n  </div>\n  <div class=\"flex flex-row mx-auto py-4 px justify-start items-start\">\n    <BaseButton\n      label=\"Сбросить период\"\n      color=\"info\"\n      small\n      @click=\"resetDates\"\n    />\n  </div>\n\n\n  <!-- <FormControl\n        v-model=\"searchDates.endDate\"\n        type=\"date\"\n        name=\"startDate\"\n        autocomplete=\"none\"\n      /> -->\n\n\n  <table>\n    <thead>\n      <tr>\n        <th>Сообщение</th>\n        <th>Дата</th>\n        <th>Объект</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr\n        v-for=\"client in itemsPaginated\"\n        :key=\"client.id\"\n      > \n        <td data-label=\"Сообщение\" >\n          {{ client.message }}\n        </td>\n        <td data-label=\"Дата\">\n          {{ client.date }}\n        </td>\n        <td data-label=\"Объект\">\n          {{ client.object != undefined && client.object.length != 0 ? client.object : '---' }}\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  <div\n    class=\"p-3 lg:px-6 border-t border-gray-100 dark:border-slate-800\"\n  >\n    <BaseLevel>\n      <BaseButtons>\n        <BaseButton\n          v-for=\"page in pagesList\"\n          :key=\"page\"\n          :active=\"page === currentPage\"\n          :label=\"page + 1\"\n          small\n          :outline=\"styleStore.darkMode\"\n          @click=\"currentPage = page\"\n        />\n      </BaseButtons>\n      <small>Страница {{ currentPageHuman }} из {{ numPages }}</small>\n    </BaseLevel>\n  </div>\n</template>\n","<script setup>\nimport { computed, ref } from \"vue\";\nimport { useMainStore } from \"@/stores/main\";\nimport { useStyleStore } from \"@/stores/style\";\nimport { mdiCellphone, mdiClose } from \"@mdi/js\";\nimport CardBoxModal from \"@/components/CardBoxModal.vue\";\nimport TableCheckboxCell from \"@/components/TableCheckboxCell.vue\";\nimport BaseLevel from \"@/components/BaseLevel.vue\";\nimport BaseButtons from \"@/components/BaseButtons.vue\";\nimport BaseButton from \"@/components/BaseButton.vue\";\nimport { proxyBaseUrl, tokenCookieName } from \"~~/configs/fetchBaseUrl\";\n\ndefineProps({\n  checkable: Boolean,\n});\n\nconst etoken = useCookie(tokenCookieName, { sameSite: \"None\", secure: true });\n\nconst styleStore = useStyleStore();\n\nconst mainStore = useMainStore();\n\nconst items = computed(() =>\n  mainStore.isSearchingClients ? mainStore.clientsFound : mainStore.clients\n);\n\nconst perPage = ref(10);\n\nconst currentPage = ref(0);\n\nconst checkedRows = ref([]);\n\nconst itemsPaginated = computed(() =>\n  items.value.slice(\n    perPage.value * currentPage.value,\n    perPage.value * (currentPage.value + 1)\n  )\n);\n\nconst numPages = computed(() => Math.ceil(items.value.length / perPage.value));\n\nconst currentPageHuman = computed(() => currentPage.value + 1);\n\nconst pagesList = computed(() => {\n  const pagesList = [];\n  for (let i = 0; i < numPages.value; i++) {\n    pagesList.push(i);\n  }\n  return pagesList;\n});\n\nconst remove = (arr, cb) => {\n  const newArr = [];\n\n  arr.forEach((item) => {\n    if (!cb(item)) {\n      newArr.push(item);\n    }\n  });\n\n  return newArr;\n};\n\nconst checked = (isChecked, client) => {\n  if (isChecked) {\n    checkedRows.value.push(client);\n  } else {\n    checkedRows.value = remove(\n      checkedRows.value,\n      (row) => row.id === client.id\n    );\n  }\n};\n\nconst isDevicesModalActive = ref(false);\nconst isModalPhoneActive = ref(false);\nconst userDevices = ref([]);\n\nconst groups = computed(() => mainStore.groups);\nconst selectedGroupId = ref(0);\n\nconst addUsersToGroup = async () => {\n  const path = proxyBaseUrl + \"add-user-to-group\";\n  const usersIdArr = checkedRows.value.map((user) => user.id);\n  await $fetch(path, {\n    method: \"POST\",\n    body: {\n      group_id: selectedGroupId.value.value,\n      user_id: usersIdArr,\n      token: etoken.value,\n    },\n  }).then((r) => {\n    if (r.message === \"ok\") {\n      isAddingToGroupModalActive.value = false;\n      checkedRows.value = [];\n      mainStore.getGroupsList();\n    }\n  });\n};\n\nconst getDevices = async (id) => {\n  userDevices.value = [];\n  const path = proxyBaseUrl + \"get-user-devices\";\n  await $fetch(path, {\n    method: \"POST\",\n    body: {\n      user_id: id,\n      token: etoken.value,\n    },\n  }).then((r) => {\n    // r = JSON.parse(r)\n    if (r.message === \"ok\") {\n      userDevices.value = r.device;\n      console.log(\"devices\", userDevices.value);\n    }\n  });\n};\nconst isModalPincodeActive = ref(false);\nconst tempPinCode = ref(\"Нажмите кнопку ниже\");\n\nwatch(isModalPincodeActive, () => {\n  if (isDevicesModalActive.value == false) {\n    tempPinCode.value = \"Нажмите кнопку ниже\";\n  }\n});\n\nconst getPinCode = async () => {\n  // const path = proxyBaseUrl+'reset-user-pin'\n  // await $fetch(path, {\n  //   method: 'POST',\n  //   body: {\n  //     user_id: currentClientId.value,\n  //     token: etoken.value\n  //   }\n  // })\n\n  // let pincode = \"\";\n  // for (let i = 0; i < 4; i++) {\n  //   pincode += Math.floor(Math.random() * 10);\n  // }\n  // tempPinCode.value = pincode;\n\n  const path2 = proxyBaseUrl+'set-user-pin'\n  await $fetch(path2, {\n    method: 'POST',\n    body: {\n      user_id: currentClientId.value,\n      password: tempPinCode.value,\n      token: etoken.value\n    }\n  }).then((r) => {\n    if (r.message === \"ok\") {\n      isModalPincodeActive.value = false;\n      tempPinCode.value = \"\";\n    }\n  })\n};\n\nconst isModalMessageActive = ref(false);\n\nconst isModalSuccessActive = ref(false);\nconst isModalErrorActive = ref(false);\n\nconst isAddingToGroupModalActive = ref(false);\n\nconst messageToUser = ref(\"\");\n\nconst currentClientPhone = ref(\"\");\nconst currentClientId = ref(0);\n\nconst sendMessage = async () => {\n  const path = proxyBaseUrl + \"send-push\";\n  await $fetch(path, {\n    method: \"POST\",\n    body: {\n      phone: currentClientPhone.value,\n      text: messageToUser.value,\n      token: etoken.value,\n    },\n  }).then((r) => {\n    messageToUser.value = \"\";\n    if (r.message === \"ok\") {\n      isModalMessageActive.value = false;\n      isModalSuccessActive.value = true;\n    } else {\n      isModalErrorActive.value = true;\n    }\n  });\n};\n\nconst isModalMessagesActive = ref(false);\n\nconst getMessages = async (id) => {\n  const path = proxyBaseUrl + \"get-messages\";\n  await $fetch(path, {\n    method: \"POST\",\n    body: {\n      user_id: id,\n      token: etoken.value,\n    },\n  }).then((r) => {\n    // r = JSON.parse(r)\n    if (r.message === \"ok\") {\n      mainStore.setMessages(r.messages);\n    }\n  });\n};\n\nconst toggleBlockClient = async (client) => {\n  const path = proxyBaseUrl + \"user-toggle-block\";\n  await $fetch(path, {\n    method: \"POST\",\n    body: {\n      user_id: client.id,\n      token: etoken.value,\n      block: client.active != \"2\",\n    },\n  }).then((r) => {\n    if (r.message === \"ok\") {\n      mainStore.getClientsList()\n      client.active = client.active != \"2\" ? \"2\" : \"1\";\n    }\n  });\n};\n\nconst setUserPhone = async () => {\n  const path = proxyBaseUrl + \"update-user-phone\";\n  await $fetch(path, {\n    method: \"POST\",\n    body: {\n      user_id: currentClientId.value,\n      token: etoken.value,\n      phone: currentClientPhone.value,\n    },\n  }).then((r) => {\n    if (r.message === \"ok\") {\n      mainStore.getClientsList()\n    }\n  });\n}\n</script>\n\n<template>\n  <CardBoxModal v-model=\"isModalSuccessActive\" title=\"Операция завершена\">\n    <h2 class=\"my-2\">Операция завершена успешно</h2>\n  </CardBoxModal>\n\n  <CardBoxModal v-model=\"isModalErrorActive\" title=\"Операция завершена\">\n    <h2 class=\"my-2\">Возникла ошибка, попробуйте позже.</h2>\n  </CardBoxModal>\n\n  <CardBoxModal v-model=\"isDevicesModalActive\" title=\"Устройства пользователя\">\n    <div class=\"flex flex-col\">\n      <div\n        v-for=\"device in userDevices\"\n        class=\"flex flex-col rounded-lg p-2 m-2 drop-shadow-lg bg-slate-200 dark:bg-slate-500\"\n      >\n        <div class=\"flex flex-row items-center\">\n          <BaseIcon :path=\"mdiCellphone\" :size=\"50\" h=\"h-16\" w=\"w-16\" />\n          <div class=\"flex flex-col\">\n            <p class=\"text-gray-500 dark:text-slate-800 font-bold m-1\">\n              {{ device.phone_type }}\n            </p>\n            <p class=\"text-gray-500 dark:text-slate-800 font-bold m-1\">\n              ПО: {{ device.phone_os }}, версия Сэйв.info:\n              {{ device.app_version }}\n            </p>\n          </div>\n        </div>\n        <div class=\"flex flex-col\">\n          <p class=\"text-gray-500 dark:text-slate-800 m-1\">\n            Зарегистрирован {{ device.register_date }}\n          </p>\n          <p class=\"text-gray-500 dark:text-slate-800 m-1\">\n            Был в сети {{ device.last_online }}\n          </p>\n        </div>\n      </div>\n    </div>\n  </CardBoxModal>\n\n  <CardBoxModal\n    v-model=\"isModalPincodeActive\"\n    title=\"Сброс пин-кода пользователя\"\n  >\n    <FormField label=\"Новый пинкод\">\n      <FormControl\n        v-model=\"tempPinCode\"\n        placeholder=\"4 цифры\"\n        type=\"number\"\n      />\n    </FormField>\n    <BaseButton color=\"info\" label=\"Сменить пин-код\" @click=\"getPinCode()\" />\n  </CardBoxModal>\n\n  <CardBoxModal\n    v-model=\"isModalMessageActive\"\n    title=\"Отправить сообщение пользователю\"\n  >\n    <FormField label=\"Сообщение\" help=\"Сообщение для пользователя\">\n      <FormControl\n        v-model=\"messageToUser\"\n        placeholder=\"Сообщение\"\n        type=\"text\"\n      />\n    </FormField>\n    <BaseButton color=\"info\" label=\"Отправить\" @click=\"sendMessage()\" />\n  </CardBoxModal>\n\n  <CardBoxModal\n    v-model=\"isModalPhoneActive\"\n    title=\"Редактировать номер телефона пользователя\"\n  >\n    <FormField label=\"Номер телефона\">\n      <FormControl\n        v-model=\"currentClientPhone\"\n        placeholder=\"Номер\"\n        type=\"number\"\n        :masked=\"true\"\n        mask=\"7##########\"\n      />\n    </FormField>\n    <BaseButton color=\"info\" label=\"Отправить\" @click=\"setUserPhone()\" />\n  </CardBoxModal>\n\n  <CardBoxModal\n    v-model=\"isAddingToGroupModalActive\"\n    title=\"Добавить пользователей в группу\"\n  >\n    <FormField label=\"Группа\" help=\"Выберите группу\">\n      <FormControl\n        v-model=\"selectedGroupId\"\n        type=\"select\"\n        :options=\"\n          groups.map((group) => ({ value: group.id, label: group.name }))\n        \"\n      >\n      </FormControl>\n    </FormField>\n    <BaseButton color=\"info\" label=\"Отправить\" @click=\"addUsersToGroup()\" />\n  </CardBoxModal>\n\n  <CardBoxModal\n    v-model=\"isModalMessagesActive\"\n    title=\"Сообщения пользователя\"\n    has-table\n  >\n    <TableMessages :is-active=\"isModalMessagesActive\" />\n  </CardBoxModal>\n\n  <div\n    v-if=\"checkedRows.length\"\n    class=\"p-3 bg-gray-100/50 dark:bg-slate-800 flex flex-row justify-between items-center\"\n  >\n    <div class=\"flex flex-row justify-start items-center overflow-x-auto\">\n      <div\n        v-for=\"checkedRow in checkedRows\"\n        :key=\"checkedRow.id\"\n        class=\"flex flex-row justify-start items-center bg-gray-100 dark:bg-slate-700 px-2 py-1 rounded-sm mr-2\"\n      >\n        <span class=\"text-sm\">\n          {{ checkedRow.phone }}\n        </span>\n        <div\n          class=\"flex flex-col items-center justify-center p-1 text-slate-800 dark:text-slate-200\"\n        >\n          <BaseIcon\n            :path=\"mdiClose\"\n            size=\"14\"\n            @click=\"checked(false, checkedRow)\"\n          />\n        </div>\n      </div>\n    </div>\n    <BaseButton\n      label=\"Добавить в группу\"\n      color=\"info\"\n      small\n      @click=\"isAddingToGroupModalActive = true\"\n    />\n  </div>\n\n  <table>\n    <thead>\n      <tr>\n        <th v-if=\"checkable\" />\n        <th>Номер договора</th>\n        <th>Адрес договора</th>\n        <th>Город</th>\n        <th>Отправить уведомление</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr v-for=\"client in itemsPaginated\" :key=\"client.id\">\n        <TableCheckboxCell\n          v-if=\"checkable\"\n          @checked=\"checked($event, client)\"\n        />\n        <td class=\"border-b-0 lg:w-6 before:hidden\" data-label=\"Договор\">\n          {{ client.phone }}\n        </td>\n        <td class=\"border-b-0 lg:w-6 before:hidden\" data-label=\"Адрес\">\n          {{ client.address }}\n        </td>\n        <td class=\"border-b-0 lg:w-6 before:hidden\" data-label=\"Город\">\n          {{ client.city }}\n        </td>\n        <td data-label=\"Уведомление\">\n          <BaseButton\n            color=\"success\"\n            label=\"Отправить\"\n            @click=\"currentClientPhone = client.phone; isModalMessageActive = true;\"\n          />\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  <div class=\"p-3 lg:px-6 border-t border-gray-100 dark:border-slate-800\">\n    <BaseLevel>\n      <BaseButtons>\n        <BaseButton\n          v-for=\"page in pagesList\"\n          :key=\"page\"\n          :active=\"page === currentPage\"\n          :label=\"page + 1\"\n          small\n          :outline=\"styleStore.darkMode\"\n          @click=\"currentPage = page\"\n        />\n      </BaseButtons>\n      <small>Страница {{ currentPageHuman }} из {{ numPages }}</small>\n    </BaseLevel>\n  </div>\n</template>\n"],"names":["pagesList"],"mappings":"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}