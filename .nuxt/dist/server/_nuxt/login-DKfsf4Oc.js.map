{"version":3,"file":"login-DKfsf4Oc.js","sources":["../../../../pages/login.vue"],"sourcesContent":["<script setup>\nimport { reactive, ref, watch } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { mdiAccount, mdiAsterisk, mdiDoor} from '@mdi/js'\nimport SectionFullScreen from '@/components/SectionFullScreen.vue'\nimport CardBox from '@/components/CardBox.vue'\nimport FormField from '@/components/FormField.vue'\nimport FormControl from '@/components/FormControl.vue'\nimport BaseButton from '@/components/BaseButton.vue'\nimport BaseButtons from '@/components/BaseButtons.vue'\nimport { useMainStore } from '@/stores/main.js'\nimport { tokenCookieName, proxyBaseUrl } from '@/configs/fetchBaseUrl'\n\nconst form = reactive({\n  phone: '',\n  password: ''\n})\n\nconst etoken = useCookie(tokenCookieName, {sameSite: 'None', secure: true})\nconst errorDialogText = ref('Проверьте телефон и пароль')\nconst mainStore = useMainStore()\nconst router = useRouter()\nconst isButtonDisabled = ref(false)\nconst isErrorModalActive = ref(false)\n\nconst isPhoneValid = ref(true);\nconst isPasswordValid = ref(true);\n\nconst validationRules = {\n  phone: value => value.length === 11,\n  password: value => value.length >= 1\n};\n\nwatch(form, (newVal, oldVal) => {\n  isPhoneValid.value = validationRules.phone(newVal.phone);\n  isPasswordValid.value = validationRules.password(newVal.password);\n}, { deep: true });\n\nconst submit = async () => {\n\n  if(form.phone == '' || form.password == ''){\n    isErrorModalActive.value = true\n    errorDialogText.value = 'Заполните все обязательные поля'\n    return\n  }\n\n  // if(!isPasswordValid.value || !isPhoneValid.value){\n  //   isErrorModalActive.value = true\n  //   errorDialogText.value = 'Проверьте телефон и пароль'\n  //   return\n  // }\n  \n  isButtonDisabled.value = true\n  const path = proxyBaseUrl+'login'\n\n  await $fetch(path, {\n    method: 'POST',\n    body: form\n  }).then(r => {\n    const resp = r.message\n    isButtonDisabled.value = false\n    if(resp === 'ok'){ \n      const { message, token } = r\n      etoken.value = token\n      router.push('/')\n    }else{\n      isErrorModalActive.value = true\n      errorDialogText.value = 'Проверьте телефон и пароль'\n    }\n  });\n}\n</script>\n\n<template>\n\n  <div>\n\n    <CardBoxModal\n      v-model=\"isErrorModalActive\"\n      title=\"Ошибка входа\"\n      buttonLabel=\"OK\"\n    >\n      <p>{{ errorDialogText }}</p>\n    </CardBoxModal>\n\n    <NuxtLayout>\n      <SectionFullScreen\n      v-slot=\"{ cardClass }\"\n      bg=\"greenIndigo\"\n    >\n      <CardBox\n        :class=\"cardClass\"\n        class=\"max-h-screen overflow-y-auto\"\n        form\n        title=\"«Телеос-1» кабинет администратора\"\n        :headerIcon=\"mdiDoor\"\n        @submit.prevent=\"submit\"\n      >\n        <FormField\n          label=\"Телефон\"\n          :help=\"isPhoneValid ? 'Телефон для входа' : 'Телефон должен содержать 11 цифр'\" \n          :isValid=\"isPhoneValid\"\n        >\n          <FormControl\n            v-model=\"form.phone\"\n            :icon=\"mdiAccount\"\n            type=\"tel\"\n            name=\"login\"\n            autocomplete=\"phone\"\n          />\n        </FormField>\n\n        <FormField\n          label=\"Пароль\"\n          :help=\"isPasswordValid ? 'Пароль для входа' : 'Пароль не может быть пустым'\"\n          :isValid=\"isPasswordValid\"\n        >\n          <FormControl\n            v-model=\"form.password\"\n            :icon=\"mdiAsterisk\"\n            type=\"password\"\n            name=\"password\"\n            autocomplete=\"current-password\"\n          />\n        </FormField>\n        <template #footer>\n\n          <BaseButtons>\n            <BaseButton\n              type=\"submit\"\n              color=\"success\"\n              small\n              :disabled=\"isButtonDisabled\"\n              :label=\"isButtonDisabled ? 'Загрузка...' : 'Войти'\"\n            />\n          </BaseButtons>\n        </template>\n      </CardBox>\n    </SectionFullScreen>\n    </NuxtLayout>\n  </div>\n\n</template>\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAaA,UAAM,OAAO,SAAS;AAAA,MACpB,OAAO;AAAA,MACP,UAAU;AAAA,IACZ,CAAC;AAED,UAAM,SAAS,UAAU,iBAAiB,EAAC,UAAU,QAAQ,QAAQ,KAAI,CAAC;AAC1E,UAAM,kBAAkB,IAAI,4BAA4B;AACtC,iBAAc;AAChC,UAAM,SAAS,UAAW;AAC1B,UAAM,mBAAmB,IAAI,KAAK;AAClC,UAAM,qBAAqB,IAAI,KAAK;AAEpC,UAAM,eAAe,IAAI,IAAI;AAC7B,UAAM,kBAAkB,IAAI,IAAI;AAEhC,UAAM,kBAAkB;AAAA,MACtB,OAAO,WAAS,MAAM,WAAW;AAAA,MACjC,UAAU,WAAS,MAAM,UAAU;AAAA,IACrC;AAEA,UAAM,MAAM,CAAC,QAAQ,WAAW;AAC9B,mBAAa,QAAQ,gBAAgB,MAAM,OAAO,KAAK;AACvD,sBAAgB,QAAQ,gBAAgB,SAAS,OAAO,QAAQ;AAAA,IAClE,GAAG,EAAE,MAAM,KAAI,CAAE;AAEjB,UAAM,SAAS,YAAY;AAEzB,UAAG,KAAK,SAAS,MAAM,KAAK,YAAY,IAAG;AACzC,2BAAmB,QAAQ;AAC3B,wBAAgB,QAAQ;AACxB;AAAA,MACD;AAQD,uBAAiB,QAAQ;AACzB,YAAM,OAAO,eAAa;AAE1B,YAAM,OAAO,MAAM;AAAA,QACjB,QAAQ;AAAA,QACR,MAAM;AAAA,MACV,CAAG,EAAE,KAAK,OAAK;AACX,cAAM,OAAO,EAAE;AACf,yBAAiB,QAAQ;AACzB,YAAG,SAAS,MAAK;AACf,gBAAM,EAAE,SAAS,MAAK,IAAK;AAC3B,iBAAO,QAAQ;AACf,iBAAO,KAAK,GAAG;AAAA,QACrB,OAAS;AACH,6BAAmB,QAAQ;AAC3B,0BAAgB,QAAQ;AAAA,QACzB;AAAA,MACL,CAAG;AAAA,IACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}