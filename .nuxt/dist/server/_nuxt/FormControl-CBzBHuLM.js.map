{"version":3,"file":"FormControl-CBzBHuLM.js","sources":["../../../../components/FormField.vue","../../../../components/FormControl.vue"],"sourcesContent":["<script setup>\nimport { computed, useSlots } from 'vue'\n\ndefineProps({\n  label: {\n    type: String,\n    default: null\n  },\n  labelFor: {\n    type: String,\n    default: null\n  },\n  help: {\n    type: String,\n    default: null\n  },\n  isValid: {\n    type: Boolean,\n    default: true\n  },\n})\n\nconst slots = useSlots()\n\nconst wrapperClass = computed(() => {\n  const base = []\n  const slotsLength = slots.default().length\n\n  if (slotsLength > 1) {\n    base.push('grid grid-cols-1 gap-3')\n  }\n\n  if (slotsLength === 2) {\n    base.push('md:grid-cols-2')\n  }\n\n  return base\n})\n</script>\n\n<template>\n  <div class=\"mb-6 last:mb-0\">\n    <label\n      v-if=\"label\"\n      :for=\"labelFor\"\n      class=\"block font-bold mb-2\"\n    >{{ label }}</label>\n    <div :class=\"wrapperClass\">\n      <slot />\n    </div>\n    <div\n      v-if=\"help\"\n      :class=\"{'text-xs text-gray-500 dark:text-slate-400 mt-1': true, 'text-red-500': !isValid}\"\n    >\n      {{ help }}\n    </div>\n  </div>\n</template>","<script setup>\nimport { computed, ref, onMounted, onBeforeUnmount } from 'vue'\nimport { useMainStore } from '@/stores/main'\nimport FormControlIcon from '@/components/FormControlIcon.vue'\n\nconst props = defineProps({\n  name: {\n    type: String,\n    default: null\n  },\n  id: {\n    type: String,\n    default: null\n  },\n  autocomplete: {\n    type: String,\n    default: null\n  },\n  placeholder: {\n    type: String,\n    default: null\n  },\n  inputmode: {\n    type: String,\n    default: null\n  },\n  icon: {\n    type: String,\n    default: null\n  },\n  options: {\n    type: Array,\n    default: null\n  },\n  type: {\n    type: String,\n    default: 'text'\n  },\n  modelValue: {\n    type: [String, Number, Boolean, Array, Object],\n    default: ''\n  },\n  intonly: {\n    type: Boolean,\n    default: false\n  },\n  masked: {\n    type: Boolean,\n    default: false\n  },\n  mask: {\n    type: String,\n    default: null\n  },\n  required: Boolean,\n  borderless: Boolean,\n  transparent: Boolean,\n  ctrlKFocus: Boolean\n})\n\nconst emit = defineEmits(['update:modelValue', 'setRef'])\n\nconst computedValue = computed({\n  get: () => props.modelValue,\n  set: value => {\n    emit('update:modelValue', value)\n  }\n})\n\nconst inputElClass = computed(() => {\n  const base = [\n    'px-3 py-2 max-w-full focus:ring focus:outline-none border-gray-700 rounded w-full',\n    'dark:placeholder-gray-400',\n    computedType.value === 'textarea' ? 'h-24' : 'h-12',\n    props.borderless ? 'border-0' : 'border',\n    props.transparent ? 'bg-transparent' : 'bg-white dark:bg-slate-800'\n  ]\n\n  if (props.icon) {\n    base.push('pl-10')\n  }\n\n  return base\n})\n\nconst computedType = computed(() => props.options ? 'select' : props.type)\n\nconst controlIconH = computed(() => props.type === 'textarea' ? 'h-full' : 'h-12')\n\nconst mainStore = useMainStore()\n\nconst selectEl = ref('')\n\nconst textareaEl = ref('')\n\nconst inputEl = ref('')\n\nonMounted(() => {\n  if (selectEl.value) {\n    emit('setRef', selectEl.value)\n  } else if (textareaEl.value) {\n    emit('setRef', textareaEl.value)\n  } else {\n    emit('setRef', inputEl.value)\n  }\n})\n\nif (props.ctrlKFocus) {\n  const fieldFocusHook = e => {\n    if (e.ctrlKey && e.key === 'k') {\n      e.preventDefault()\n      inputEl.value.focus()\n    } else if (e.key === 'Escape') {\n      inputEl.value.blur()\n    }\n  }\n\n  onMounted(() => {\n    if (!mainStore.isFieldFocusRegistered) {\n      window.addEventListener('keydown', fieldFocusHook)\n      mainStore.isFieldFocusRegistered = true\n    }\n  })\n\n  onBeforeUnmount(() => {\n    window.removeEventListener('keydown', fieldFocusHook)\n    mainStore.isFieldFocusRegistered = false\n  })\n\n}\n\nfunction isCharNumber(c) {\n  return c >= '0' && c <= '9';\n}\n\n  const onTypeInt = () => {\n    if(props.modelValue !== ''){\n      let ischar = isCharNumber(props.modelValue.slice(-1))\n      \n      if(!ischar){\n        console.log('sliced. before - ', props.modelValue, 'after -', props.modelValue.slice(0, -1))\n        props.modelValue = props.modelValue.slice(0, -1);\n      }\n    }\n  }\n</script>\n\n<template>\n  <div class=\"relative\">\n    <select\n      v-if=\"computedType === 'select'\"\n      :id=\"id\"\n      v-model=\"computedValue\"\n      :name=\"name\"\n      :class=\"inputElClass\"\n    >\n      <option\n        v-for=\"option in options\"\n        :key=\"option.id ?? option\"\n        :value=\"option\"\n      >\n        {{ option.label ?? option }}\n      </option>\n    </select>\n    <textarea\n      v-else-if=\"computedType === 'textarea'\"\n      :id=\"id\"\n      v-model=\"computedValue\"\n      :class=\"inputElClass\"\n      :name=\"name\"\n      :placeholder=\"placeholder\"\n      :required=\"required\"\n    />\n    <input\n      v-show=\"computedType !== 'dadata'\"\n      v-else\n      :id=\"id\"\n      ref=\"inputEl\"\n      v-model=\"computedValue\"\n      :name=\"name\"\n      :inputmode=\"inputmode\"\n      :autocomplete=\"autocomplete\"\n      :required=\"required\"\n      :placeholder=\"placeholder\"\n      :type=\"computedType\"\n      :class=\"inputElClass\"\n      :v-maska=\"masked\"\n      :data-maska=\"masked ? mask !== '' ? mask : null : null\"\n      @keyup=\"intonly ? modelValue = modelValue.replace(/[^0-9.]/g, '').replace(/(\\..*?)\\..*/g, '$1').replace(/^0[^.]/, '0') : null\"\n    >\n    <FormControlIcon\n      v-if=\"icon\"\n      :icon=\"icon\"\n      :h=\"controlIconH\"\n    />\n  </div>\n</template>\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAsBA,UAAM,QAAQ,SAAU;AAExB,UAAM,eAAe,SAAS,MAAM;AAClC,YAAM,OAAO,CAAE;AACf,YAAM,cAAc,MAAM,QAAO,EAAG;AAEpC,UAAI,cAAc,GAAG;AACnB,aAAK,KAAK,wBAAwB;AAAA,MACnC;AAED,UAAI,gBAAgB,GAAG;AACrB,aAAK,KAAK,gBAAgB;AAAA,MAC3B;AAED,aAAO;AAAA,IACT,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChCD,UAAM,QAAQ;AAuDd,UAAM,OAAO;AAEb,UAAM,gBAAgB,SAAS;AAAA,MAC7B,KAAK,MAAM,MAAM;AAAA,MACjB,KAAK,CAAS,UAAA;AACZ,aAAK,qBAAqB,KAAK;AAAA,MACjC;AAAA,IAAA,CACD;AAEK,UAAA,eAAe,SAAS,MAAM;AAClC,YAAM,OAAO;AAAA,QACX;AAAA,QACA;AAAA,QACA,aAAa,UAAU,aAAa,SAAS;AAAA,QAC7C,MAAM,aAAa,aAAa;AAAA,QAChC,MAAM,cAAc,mBAAmB;AAAA,MAAA;AAGzC,UAAI,MAAM,MAAM;AACd,aAAK,KAAK,OAAO;AAAA,MACnB;AAEO,aAAA;AAAA,IAAA,CACR;AAED,UAAM,eAAe,SAAS,MAAM,MAAM,UAAU,WAAW,MAAM,IAAI;AAEzE,UAAM,eAAe,SAAS,MAAM,MAAM,SAAS,aAAa,WAAW,MAAM;AAE/D,iBAAa;AAEd,QAAI,EAAE;AAEJ,QAAI,EAAE;AAET,QAAI,EAAE;AAYtB,QAAI,MAAM;AAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}